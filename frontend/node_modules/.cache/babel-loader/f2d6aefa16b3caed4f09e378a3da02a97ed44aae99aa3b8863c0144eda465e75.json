{"ast":null,"code":"var _jsxFileName = \"E:\\\\LMS\\\\frontend\\\\src\\\\components\\\\Employee\\\\CalendarWithToggle.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { getMyApprovedLeaves, getAllApprovedLeaves } from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getMonthString = date => `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, \"0\")}`;\nconst CalendarWithToggle = ({\n  user\n}) => {\n  _s();\n  const [mode, setMode] = useState(\"mine\"); // \"mine\" or \"team\"\n  const [myLeaves, setMyLeaves] = useState([]);\n  const [allLeaves, setAllLeaves] = useState([]);\n  const [activeMonth, setActiveMonth] = useState(new Date());\n  useEffect(() => {\n    const fetchData = async () => {\n      const month = getMonthString(activeMonth);\n      if (mode === \"mine\") {\n        const res = await getMyApprovedLeaves(month);\n        setMyLeaves(res.data);\n      } else {\n        const res = await getAllApprovedLeaves(month);\n        setAllLeaves(res.data);\n      }\n    };\n    fetchData();\n  }, [mode, activeMonth]);\n\n  // Helper to get all days covered by a leave\n  const getLeaveDays = leave => {\n    const days = [];\n    let current = new Date(leave.startDate);\n    const end = new Date(leave.endDate);\n    while (current <= end) {\n      days.push(current.toDateString());\n      current.setDate(current.getDate() + 1);\n    }\n    return days;\n  };\n\n  // For \"mine\" mode: days the user is on leave\n  const myLeaveDays = new Set(myLeaves.flatMap(getLeaveDays));\n\n  // For \"team\" mode: map of dateString -> count\n  const teamLeaveCounts = {};\n  allLeaves.forEach(leave => {\n    getLeaveDays(leave).forEach(day => {\n      teamLeaveCounts[day] = (teamLeaveCounts[day] || 0) + 1;\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minWidth: 350,\n      background: \"#f9f9f9\",\n      borderRadius: 10,\n      padding: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        marginBottom: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 22,\n          color: \"#2345a7\",\n          marginRight: 12\n        },\n        children: \"Team Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: \"auto\",\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: 8\n          },\n          children: \"My Leaves\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: mode === \"team\",\n          onChange: () => setMode(mode === \"mine\" ? \"team\" : \"mine\"),\n          style: {\n            width: 36,\n            height: 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginLeft: 8\n          },\n          children: \"Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      value: activeMonth,\n      onActiveStartDateChange: ({\n        activeStartDate\n      }) => setActiveMonth(activeStartDate),\n      tileContent: ({\n        date,\n        view\n      }) => {\n        if (view !== \"month\") return null;\n        if (mode === \"mine\" && myLeaveDays.has(date.toDateString())) {\n          // Circle for user's leave\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: \"2px solid #2345a7\",\n              borderRadius: \"50%\",\n              width: 28,\n              height: 28,\n              margin: \"auto\",\n              marginTop: 2,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              color: \"#2345a7\",\n              fontWeight: \"bold\",\n              fontSize: 16,\n              background: \"#e6f0ff\"\n            },\n            children: date.getDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this);\n        }\n        if (mode === \"team\" && teamLeaveCounts[date.toDateString()]) {\n          // Red number for team leave count\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"relative\",\n              width: 32,\n              height: 32\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                position: \"absolute\",\n                top: 2,\n                right: 2,\n                color: \"red\",\n                fontWeight: \"bold\",\n                fontSize: 14\n              },\n              children: teamLeaveCounts[date.toDateString()]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this);\n        }\n        return null;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 12,\n        fontSize: 14,\n        color: \"#888\"\n      },\n      children: mode === \"mine\" ? \"Circled days: Your approved leaves\" : \"Red number: Number of employees on leave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarWithToggle, \"oMZcDa51OEC573ylCuxBfa7mbUA=\");\n_c = CalendarWithToggle;\nexport default CalendarWithToggle;\nvar _c;\n$RefreshReg$(_c, \"CalendarWithToggle\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","getMyApprovedLeaves","getAllApprovedLeaves","jsxDEV","_jsxDEV","getMonthString","date","getFullYear","String","getMonth","padStart","CalendarWithToggle","user","_s","mode","setMode","myLeaves","setMyLeaves","allLeaves","setAllLeaves","activeMonth","setActiveMonth","Date","fetchData","month","res","data","getLeaveDays","leave","days","current","startDate","end","endDate","push","toDateString","setDate","getDate","myLeaveDays","Set","flatMap","teamLeaveCounts","forEach","day","style","minWidth","background","borderRadius","padding","children","display","alignItems","marginBottom","fontWeight","fontSize","color","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","type","checked","onChange","width","height","value","onActiveStartDateChange","activeStartDate","tileContent","view","has","border","margin","marginTop","justifyContent","position","top","right","_c","$RefreshReg$"],"sources":["E:/LMS/frontend/src/components/Employee/CalendarWithToggle.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport { getMyApprovedLeaves, getAllApprovedLeaves } from \"../../services/api\";\r\n\r\n\r\nconst getMonthString = (date) => `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, \"0\")}`;\r\n\r\nconst CalendarWithToggle = ({ user }) => {\r\n  const [mode, setMode] = useState(\"mine\"); // \"mine\" or \"team\"\r\n  const [myLeaves, setMyLeaves] = useState([]);\r\n  const [allLeaves, setAllLeaves] = useState([]);\r\n  const [activeMonth, setActiveMonth] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const month = getMonthString(activeMonth);\r\n      if (mode === \"mine\") {\r\n        const res = await getMyApprovedLeaves(month);\r\n        setMyLeaves(res.data);\r\n      } else {\r\n        const res = await getAllApprovedLeaves(month);\r\n        setAllLeaves(res.data);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [mode, activeMonth]);\r\n\r\n  // Helper to get all days covered by a leave\r\n  const getLeaveDays = (leave) => {\r\n    const days = [];\r\n    let current = new Date(leave.startDate);\r\n    const end = new Date(leave.endDate);\r\n    while (current <= end) {\r\n      days.push(current.toDateString());\r\n      current.setDate(current.getDate() + 1);\r\n    }\r\n    return days;\r\n  };\r\n\r\n  // For \"mine\" mode: days the user is on leave\r\n  const myLeaveDays = new Set(myLeaves.flatMap(getLeaveDays));\r\n\r\n  // For \"team\" mode: map of dateString -> count\r\n  const teamLeaveCounts = {};\r\n  allLeaves.forEach((leave) => {\r\n    getLeaveDays(leave).forEach((day) => {\r\n      teamLeaveCounts[day] = (teamLeaveCounts[day] || 0) + 1;\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div style={{ minWidth: 350, background: \"#f9f9f9\", borderRadius: 10, padding: 16 }}>\r\n      <div style={{ display: \"flex\", alignItems: \"center\", marginBottom: 12 }}>\r\n        <span style={{ fontWeight: \"bold\", fontSize: 22, color: \"#2345a7\", marginRight: 12 }}>\r\n          Team Calendar\r\n        </span>\r\n        <label style={{ marginLeft: \"auto\", display: \"flex\", alignItems: \"center\" }}>\r\n          <span style={{ marginRight: 8 }}>My Leaves</span>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={mode === \"team\"}\r\n            onChange={() => setMode(mode === \"mine\" ? \"team\" : \"mine\")}\r\n            style={{ width: 36, height: 20 }}\r\n          />\r\n          <span style={{ marginLeft: 8 }}>Team</span>\r\n        </label>\r\n      </div>\r\n      <Calendar\r\n        value={activeMonth}\r\n        onActiveStartDateChange={({ activeStartDate }) => setActiveMonth(activeStartDate)}\r\n        tileContent={({ date, view }) => {\r\n          if (view !== \"month\") return null;\r\n          if (mode === \"mine\" && myLeaveDays.has(date.toDateString())) {\r\n            // Circle for user's leave\r\n            return (\r\n              <div\r\n                style={{\r\n                  border: \"2px solid #2345a7\",\r\n                  borderRadius: \"50%\",\r\n                  width: 28,\r\n                  height: 28,\r\n                  margin: \"auto\",\r\n                  marginTop: 2,\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  color: \"#2345a7\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: 16,\r\n                  background: \"#e6f0ff\"\r\n                }}\r\n              >\r\n                {date.getDate()}\r\n              </div>\r\n            );\r\n          }\r\n          if (mode === \"team\" && teamLeaveCounts[date.toDateString()]) {\r\n            // Red number for team leave count\r\n            return (\r\n              <div style={{ position: \"relative\", width: 32, height: 32 }}>\r\n                <span style={{\r\n                  position: \"absolute\",\r\n                  top: 2,\r\n                  right: 2,\r\n                  color: \"red\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: 14\r\n                }}>\r\n                  {teamLeaveCounts[date.toDateString()]}\r\n                </span>\r\n              </div>\r\n            );\r\n          }\r\n          return null;\r\n        }}\r\n      />\r\n      <div style={{ marginTop: 12, fontSize: 14, color: \"#888\" }}>\r\n        {mode === \"mine\"\r\n          ? \"Circled days: Your approved leaves\"\r\n          : \"Red number: Number of employees on leave\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarWithToggle;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}